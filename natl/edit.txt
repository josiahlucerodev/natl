	template<class> struct IsFunctionV : FalseType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...)> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......)> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...)&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......)&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...)&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......)&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile&&> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile&&> : TrueType {}
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) & noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) & noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) && noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const&& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) volatile&& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes...) const volatile&& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) && noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const&& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) volatile&& noexcept> : TrueType {};
	template<class ReturnType, class... ArgTypes> struct IsFunctionV<ReturnType(ArgTypes......) const volatile&& noexcept> : TrueType {};